/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.14.v20181114
 * Generated at: 2021-12-14 19:45:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class allusers_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/j.rodriguez-zuniga/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153403082000L));
    _jspx_dependants.put("file:/C:/Users/j.rodriguez-zuniga/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1632338446470L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<title>All Users</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"rel=\"stylesheet\"></link>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\"></script>\r\n");
      out.write("\t<script src=\"resources/static/app.js\"></script>\r\n");
      out.write("\t<script src=\"resources/static/js/service/user.service.js\"></script>\r\n");
      out.write("\t<script src=\"resources/static/js/controller/user.controller.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body ng-app=\"myApp\">\r\n");
      out.write("\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"/\">Weight Tracking Studio</a>\r\n");
      out.write("\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\">\r\n");
      out.write("\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t<br>\r\n");
      out.write("<!-- \t<div class=\"generic-container\" ng-controller=\"UserController as ctrl\"> -->\r\n");
      out.write("<!--           <div class=\"panel panel-default\"> -->\r\n");
      out.write("<!--               <div class=\"panel-heading\"><span class=\"lead\">User Registration Form </span></div> -->\r\n");
      out.write("<!--               <div class=\"formcontainer\"> -->\r\n");
      out.write("<!--                   <form ng-submit=\"ctrl.submit()\" name=\"myForm\" class=\"form-horizontal\"> -->\r\n");
      out.write("<!--                       <input type=\"hidden\" ng-model=\"ctrl.user.id\" /> -->\r\n");
      out.write("<!--                       <div class=\"row\"> -->\r\n");
      out.write("<!--                           <div class=\"form-group col-md-12\"> -->\r\n");
      out.write("<!--                               <label class=\"col-md-2 control-lable\" for=\"uname\">Name</label> -->\r\n");
      out.write("<!--                               <div class=\"col-md-7\"> -->\r\n");
      out.write("<!--                                   <input type=\"text\" ng-model=\"ctrl.user.name\" id=\"uname\" class=\"username form-control input-sm\" placeholder=\"Enter your name\" required ng-minlength=\"3\"/> -->\r\n");
      out.write("<!--                                   <div class=\"has-error\" ng-show=\"myForm.$dirty\"> -->\r\n");
      out.write("<!--                                       <span ng-show=\"myForm.uname.$error.required\">This is a required field</span> -->\r\n");
      out.write("<!--                                       <span ng-show=\"myForm.uname.$error.minlength\">Minimum length required is 3</span> -->\r\n");
      out.write("<!--                                       <span ng-show=\"myForm.uname.$invalid\">This field is invalid </span> -->\r\n");
      out.write("<!--                                   </div> -->\r\n");
      out.write("<!--                               </div> -->\r\n");
      out.write("<!--                           </div> -->\r\n");
      out.write("<!--                       </div> -->\r\n");
      out.write("                         \r\n");
      out.write("                       \r\n");
      out.write("<!--                       <div class=\"row\"> -->\r\n");
      out.write("<!--                           <div class=\"form-group col-md-12\"> -->\r\n");
      out.write("<!--                               <label class=\"col-md-2 control-lable\" for=\"age\">Age</label> -->\r\n");
      out.write("<!--                               <div class=\"col-md-7\"> -->\r\n");
      out.write("<!--                                   <input type=\"number\" ng-model=\"ctrl.user.age\" id=\"age\" class=\"form-control input-sm\" placeholder=\"Enter your Age. [This field is validation free]\"/> -->\r\n");
      out.write("<!--                               </div> -->\r\n");
      out.write("<!--                           </div> -->\r\n");
      out.write("<!--                       </div> -->\r\n");
      out.write(" \r\n");
      out.write("<!--                       <div class=\"row\"> -->\r\n");
      out.write("<!--                           <div class=\"form-group col-md-12\"> -->\r\n");
      out.write("<!--                               <label class=\"col-md-2 control-lable\" for=\"email\">Email</label> -->\r\n");
      out.write("<!--                               <div class=\"col-md-7\"> -->\r\n");
      out.write("<!--                                   <input type=\"email\" ng-model=\"ctrl.user.email\" id=\"email\" class=\"email form-control input-sm\" placeholder=\"Enter your Email\" required/> -->\r\n");
      out.write("<!--                                   <div class=\"has-error\" ng-show=\"myForm.$dirty\"> -->\r\n");
      out.write("<!--                                       <span ng-show=\"myForm.email.$error.required\">This is a required field</span> -->\r\n");
      out.write("<!--                                       <span ng-show=\"myForm.email.$invalid\">This field is invalid </span> -->\r\n");
      out.write("<!--                                   </div> -->\r\n");
      out.write("<!--                               </div> -->\r\n");
      out.write("<!--                           </div> -->\r\n");
      out.write("<!--                       </div> -->\r\n");
      out.write(" \r\n");
      out.write("<!--                       <div class=\"row\"> -->\r\n");
      out.write("<!--                           <div class=\"form-actions floatRight\"> -->\r\n");
      out.write("<!--                               <input type=\"submit\"  value=\"{{!ctrl.user.id ? 'Add' : 'Update'}}\" class=\"btn btn-primary btn-sm\" ng-disabled=\"myForm.$invalid\"> -->\r\n");
      out.write("<!--                               <button type=\"button\" ng-click=\"ctrl.reset()\" class=\"btn btn-warning btn-sm\" ng-disabled=\"myForm.$pristine\">Reset Form</button> -->\r\n");
      out.write("<!--                           </div> -->\r\n");
      out.write("<!--                       </div> -->\r\n");
      out.write("<!--                   </form> -->\r\n");
      out.write("<!--               </div> -->\r\n");
      out.write("<!--           </div> -->\r\n");
      out.write("\t<div ng-controller=\"UserController as ctrl\">\r\n");
      out.write("\t\t<div class=\"tablecontainer\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<form name=\"userForm\"  class=\"signup-form\" ng-submit=\"ctrl.submit()\">\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<h2 class=\"text-center\">Sign Up</h2>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<input type=\"hidden\" ng-model=\"ctrl.user.id\" />\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label>Name</label> \r\n");
      out.write("\t\t\t\t<input type=\"text\" ng-model=\"ctrl.user.name\" id=\"age\" class=\"name form-control input-sm\"  placeholder=\"Enter your name:\" required=\"required\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label>Age</label> \r\n");
      out.write("\t\t\t\t<input type=\"number\" ng-model=\"ctrl.user.age\" id=\"age\" class=\"age form-control input-sm\" placeholder=\"Enter your age:\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label>Email</label> \r\n");
      out.write("\t\t\t\t<input type=\"email\" ng-model=\"ctrl.user.email\" id=\"email\" class=\"email form-control input-sm\" placeholder=\"Enter your email:\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("                          <div class=\"form-actions floatRight\">\r\n");
      out.write("                              <input type=\"submit\"  value=\"{{!ctrl.user.id ? 'Add' : 'Update'}}\" class=\"btn btn-primary btn-sm\">\r\n");
      out.write("                              <button type=\"button\" ng-click=\"ctrl.reset()\" class=\"btn btn-warning btn-sm\" ng-disabled=\"userForm.$pristine\">Reset Form</button>\r\n");
      out.write("                          </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h3>List of Users</h3>\r\n");
      out.write("    \t<table class=\"table table-bordered\">\r\n");
      out.write("\t    \t<thead>\r\n");
      out.write("\t\t        <tr>\r\n");
      out.write("\t\t        \t<td>Id</td>\r\n");
      out.write("\t\t            <td>Name</td>\r\n");
      out.write("\t\t            <td>Age</td>\r\n");
      out.write("\t\t            <td>Email</td>\r\n");
      out.write("\t\t            <td colspan=\"2\">Actions</td>\r\n");
      out.write("\t\t        </tr>\r\n");
      out.write("\t\t    </thead>\r\n");
      out.write("\t\t    <tbody>\r\n");
      out.write("\t\t    \t<tr ng-repeat=\"u in ctrl.users\">\r\n");
      out.write("\t\t\t\t\t<td><span ng-bind=\"u.id\"></span></td>\r\n");
      out.write("\t\t\t\t\t<td><span ng-bind=\"u.name\"></span></td>\r\n");
      out.write("\t\t\t\t\t<td><span ng-bind=\"u.age\"></span></td>\r\n");
      out.write("\t\t\t\t\t<td><span ng-bind=\"u.email\"></span></td>\r\n");
      out.write("\t\t          \t<td>\r\n");
      out.write("\t\t          \t\t<button type=\"button\" ng-click=\"ctrl.edit(u.id)\" class=\"btn btn-primary btn-sm\">Edit</button>  \r\n");
      out.write("\t\t          \t\t<button type=\"button\" ng-click=\"ctrl.remove(u.id)\" class=\"btn btn-primary btn-sm\">Remove</button>\r\n");
      out.write("\t\t          \t</td>\r\n");
      out.write("\t            </tr>\r\n");
      out.write("\t\t    </tbody>\r\n");
      out.write("   \t \t</table>\r\n");
      out.write("   \t \t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/allusers.jsp(13,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("resources/static/css/style.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
